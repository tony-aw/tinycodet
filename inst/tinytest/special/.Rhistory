?apply
by
by.data.frame
v <- 1:10
f <- factor(rep(letters[1:5], each = 2))
f
v
tapply(v, f, \(x)x[,1])
tapply(v, f, \(x)x[1])
tapply(v, f, \(x)x[2])
f <- f[sample(seq_len(f))]
f <- factor(rep(letters[1:5], each = 2))
f <- f[seq_along(f)]
f
f <- f[sample(seq_along(f))]
f
tapply(v, f, \(x)x[2])
0.16*40
17/40
42000*0.25
42000*0.25*0.5
10500 – 220 – 2000
10500 - 220 - 2000
5250 - 220 - 2000
42000*0.15
6300/2
3150-220-200
6300/3
6300-2100
10500/3
10500-3500
3500-220-2000
42000/2
7000-220-2000
5250 * 5 - (2000 + 210)
7000*5 - 2210
5250 - (2210/5)
7000 (2210/5)
7000 - (2210/5)
uurweek <- 36
uurmaand <- 36/5 * 21,75
uurmaand <- 36/5 * 21.75
maandloon <- 4000
maandloon / uurmaand
4000 * 12
jaarloon <- maandloon * 12
jaarloon * 0.25
6000 - (2210/5)
jaarloon/2
8000 - (2210/5)
6000 - 2250
6000 - 2250/5
?packageVersion
loadedNamespaces()
?loadedNamespaces()
purrr::safely
??as_mappper
purrr:::as_mapper
purrr:::as_mapper.default()
purrr:::as_mapper.default
?rlang::as_function
rlang::as_function
?rlang::as_closure
rlang::as_closure(mean)
mean
purrr:::force
??force
purrr::safely(mean)
purrr::safely(mean)
purrr::safely(loadNamespace)
args(loadNamespace)
args(purrr::safely(loadNamespace))
maandloon <- 4000
werkdagen.per.maand <- 21.75
uurloon <- maandloon/werkdagen.per.maand/8
dagloon <- maandloon/werkdagen.per.maand/8
36/5
uurloon <- dagloon/7.2
dagloon <- maandloon/werkdagen.per.maand
uurloon <- dagloon/7.2
jaarloon <- maandloon * 12
2250/5
2250/2
8000-1125
6000 - (2250/2)
# set-up ====
setwd("D:/D Desktop/Publications/R package tinycodet")
sessionInfo()
pkgs <- c("devtools", "roxygen2", "usethis", "rcmdcheck", "spelling", "tinytex",
"tinytest", "pkgdown", "goodpractice", "rhub")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
library(tinytest)
# install(file.path("D:/D Desktop/Publications/ImageMagick-7.1.0-62-Q16-HDRI-x64-dll"))
# tinytex::install_tinytex()
# tinytex::tlmgr_install("unfonts-extra")
# tinytex::tlmgr_install("makeindex")
#  create("tinycodet")
# Rcpp::Rcpp.package.skeleton("tinycodet2")
# Rcpp::compileAttributes("tinycodet")
# Install dependencies ====
pkgs <- c("stringi", "data.table")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
# set version ====
package_tarname <- "tinycodet_0.2.3.tar.gz"
# Document ====
devtools::document("./tinycodet")
devtools::build_manual(
"./tinycodet", "./tinycodet"
) # if this fails...:
# - Try installing the tinytex files above.
# - Make sure RTools is installed for the R version you're using.
# - Run rcmdcheck::rcmdcheck on your package to make sure there are no mistakes. Check its log for latex problems.
# - Note that some LateX errors are not caught by the document() function.
spelling::spell_check_package("./tinycodet", vignettes = FALSE)
# spelling::spell_check_package("./tinycodet")
urlchecker::url_check("./tinycodet")
# import system functions:
?tinycodet::import_as()
# set-up ====
setwd("D:/D Desktop/Publications/R package tinycodet")
sessionInfo()
pkgs <- c("devtools", "roxygen2", "usethis", "rcmdcheck", "spelling", "tinytex",
"tinytest", "pkgdown", "goodpractice", "rhub")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
library(tinytest)
# install(file.path("D:/D Desktop/Publications/ImageMagick-7.1.0-62-Q16-HDRI-x64-dll"))
# tinytex::install_tinytex()
# tinytex::tlmgr_install("unfonts-extra")
# tinytex::tlmgr_install("makeindex")
#  create("tinycodet")
# Rcpp::Rcpp.package.skeleton("tinycodet2")
# Rcpp::compileAttributes("tinycodet")
# Install dependencies ====
pkgs <- c("stringi", "data.table")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
# set version ====
package_tarname <- "tinycodet_0.2.3.tar.gz"
# Document ====
devtools::document("./tinycodet")
devtools::build_manual(
"./tinycodet", "./tinycodet"
) # if this fails...:
# - Try installing the tinytex files above.
# - Make sure RTools is installed for the R version you're using.
# - Run rcmdcheck::rcmdcheck on your package to make sure there are no mistakes. Check its log for latex problems.
# - Note that some LateX errors are not caught by the document() function.
spelling::spell_check_package("./tinycodet", vignettes = FALSE)
# spelling::spell_check_package("./tinycodet")
urlchecker::url_check("./tinycodet")
# import system functions:
?tinycodet::import_as()
# remove package ====
# run the following first before re-loading/-re-documenting the package:
remove.packages("tinycodet")
# install + extra checks ====
devtools::install("tinycodet")
pkgs <- c("dplyr", "powerjoin", "magrittr", "zeallot", "tidytable", "data.table",
"gamair", "rbenchmark")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
import_inops("magrittr")
import_as(~mr., "magrittr")
`:=` <- data.table::`:=`
alias_attr <- mr.$.__attributes__.
str(alias_attr)
attr.import(mr., "pkgs")
attr.import(mr., "conflicts")
attr.import(mr., "versions")
attr.import(mr., "args")
attr.import(mr., "ordered_object_names")
help.import(i = `%>%`)
help.import(i = mr.$multiply_by)
help.import(i = "%>%", alias=mr.)
help.import(i = "add", alias=mr.)
# overview pages:
?tinycodet
# Render ReadMe, vignettes and pkgdown site ====
pkgs <- c("dplyr", "powerjoin", "magrittr", "zeallot", "tidytable", "data.table",
"gamair", "rbenchmark", "xfun", "pkgdown", "servr")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
if(!requireNamespace("xfun"))install.packages("xfun")
xfun::Rscript_call(
rmarkdown::render,
list(input = "./tinycodet/README.Rmd", output_format = "github_document")
)
path_vignettes <- normalizePath("./tinycodet/vignettes/articles/")
files <- list.files(path = path_vignettes, pattern = ".Rmd")
temp.fun <- function(x) {
xfun::Rscript_call(
rmarkdown::render,
list(input = file.path(path_vignettes, x), output_format = "html_vignette")
)
}
lapply(files, temp.fun)
# create site:
pkgdown::build_site("./tinycodet", run_dont_run = TRUE)
# set-up ====
setwd("D:/D Desktop/Publications/R package tinycodet")
sessionInfo()
pkgs <- c("devtools", "roxygen2", "usethis", "rcmdcheck", "spelling", "tinytex",
"tinytest", "pkgdown", "goodpractice", "rhub")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
library(tinytest)
# install(file.path("D:/D Desktop/Publications/ImageMagick-7.1.0-62-Q16-HDRI-x64-dll"))
# tinytex::install_tinytex()
# tinytex::tlmgr_install("unfonts-extra")
# tinytex::tlmgr_install("makeindex")
#  create("tinycodet")
# Rcpp::Rcpp.package.skeleton("tinycodet2")
# Rcpp::compileAttributes("tinycodet")
# Install dependencies ====
pkgs <- c("stringi", "data.table")
for(i in pkgs) if(!requireNamespace(i))install.packages(i)
# set version ====
package_tarname <- "tinycodet_0.2.3.tar.gz"
# Document ====
devtools::document("./tinycodet")
setwd("D:/D Desktop/Publications/R package tinycodet/tinycodet/inst/tinytest/special")
# create fake packages in temporary directory:
from.dir <- file.path(getwd(), "fakelibs")
to.dir <- tempdir() |> normalizePath()
tinycodet:::.create_fake_packages(from.dir, to.dir)
expect_true(file.exists(file.path(to.dir, "fake_lib1")))
expect_true(file.exists(file.path(to.dir, "fake_lib2")))
expect_true(file.exists(file.path(to.dir, "fake_lib3")))
# set-up ====
from.dir <- file.path(getwd(), "fakelibs")
to.dir <- tempdir() |> normalizePath()
# tinycodet:::.create_fake_packages(from.dir, to.dir)
lib.loc1 <- file.path(to.dir, "fake_lib1")
lib.loc2 <- file.path(to.dir, "fake_lib2")
lib.loc3 <- file.path(to.dir, "fake_lib3")
print(lib.loc1)
print(lib.loc2)
print(lib.loc3)
# functional base functions from separate library ====
import_as(~new., "tinycodetfakepkg5", lib.loc = lib.loc1)
expect_equal(new.$fun_paste("a", "b"), "ab")
temp.fun <- function() {
import_inops("tinycodetfakepkg5", lib.loc = lib.loc1)
"a" %paste0% "b"
}
expect_equal(temp.fun(), "ab")
temp.fun <- function() {
import_LL("tinycodetfakepkg5", "fun_paste", lib.loc = lib.loc1)
fun_paste("a", "b")
}
expect_equal(temp.fun(), "ab")
