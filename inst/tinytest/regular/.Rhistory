libraty(tinycodet)
library(tinycodet)
x.charclass <- c('stRRRingi','R STRINGI', '123')
pattern <- c('\\p{Ll}', '\\p{Lu}', '\\p{Zs}')
expect1 <- expect2 <- expect3 <- list()
out1 <- out2 <- out3 <- list()
loops <- loops + 1
# set-up ===
enumerate <- 0 # to count number of tests performed using iterations in loops
loops <- 0 # to count number of loops
x.charclass <- c('stRRRingi','R STRINGI', '123')
pattern <- c('\\p{Ll}', '\\p{Lu}', '\\p{Zs}')
expect1 <- expect2 <- expect3 <- list()
out1 <- out2 <- out3 <- list()
loops <- loops + 1
library(tinytest)
x.charclass <- c('stRRRingi','R STRINGI', '123')
pattern <- c('\\p{Ll}', '\\p{Lu}', '\\p{Zs}')
expect1 <- expect2 <- expect3 <- list()
out1 <- out2 <- out3 <- list()
loops <- loops + 1
for(i in 1:length(pattern)) {
out1[[i]] <- stri_locate_ith(x.charclass, i = 1, charclass = pattern[[i]], merge = FALSE)
expect1[[i]] <- stringi::stri_locate_first_charclass(x.charclass, pattern[[i]], merge = FALSE)
out2[[i]] <- stri_locate_ith(x.charclass, i = -1, charclass = pattern[[i]], merge = FALSE)
expect2[[i]] <- stringi::stri_locate_last_charclass(x.charclass, pattern[[i]], merge = FALSE)
out3[[i]] <- stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern[[i]], merge = FALSE)
expect3[[i]] <- rbind(stringi::stri_locate_first_charclass(x.charclass[1], pattern[[i]], merge = FALSE),
stringi::stri_locate_last_charclass(x.charclass[2], pattern[[i]], merge = FALSE),
stringi::stri_locate_first_charclass(x.charclass[3], pattern[[i]], merge = FALSE))
enumerate <- enumerate + 3
}
for(i in 1:length(pattern)) {
out1[[i]] <- stri_locate_ith(x.charclass, i = 1, charclass = pattern[[i]], merge = FALSE)
expect1[[i]] <- stringi::stri_locate_first_charclass(x.charclass, pattern[[i]])
out2[[i]] <- stri_locate_ith(x.charclass, i = -1, charclass = pattern[[i]], merge = FALSE)
expect2[[i]] <- stringi::stri_locate_last_charclass(x.charclass, pattern[[i]])
out3[[i]] <- stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern[[i]], merge = FALSE)
expect3[[i]] <- rbind(stringi::stri_locate_first_charclass(x.charclass[1], pattern[[i]]),
stringi::stri_locate_last_charclass(x.charclass[2], pattern[[i]]),
stringi::stri_locate_first_charclass(x.charclass[3], pattern[[i]]))
enumerate <- enumerate + 3
}
expect_equal(expect1, out1)
expect_equal(expect2, out2)
expect_equal(expect3, out3)
# charclass - merge = FALSE ====
x.charclass <- c('stRRRingi','R STRINGI', '123')
pattern <- c('\\p{Ll}', '\\p{Lu}', '\\p{Zs}')
expect1 <- expect2 <- expect3 <- list()
out1 <- out2 <- out3 <- list()
loops <- loops + 1
for(i in 1:length(pattern)) {
out1[[i]] <- stri_locate_ith(x.charclass, i = 1, charclass = pattern[[i]], merge = FALSE)
expect1[[i]] <- stringi::stri_locate_first_charclass(x.charclass, pattern[[i]])
out2[[i]] <- stri_locate_ith(x.charclass, i = -1, charclass = pattern[[i]], merge = FALSE)
expect2[[i]] <- stringi::stri_locate_last_charclass(x.charclass, pattern[[i]])
out3[[i]] <- stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern[[i]], merge = FALSE)
expect3[[i]] <- rbind(stringi::stri_locate_first_charclass(x.charclass[1], pattern[[i]]),
stringi::stri_locate_last_charclass(x.charclass[2], pattern[[i]]),
stringi::stri_locate_first_charclass(x.charclass[3], pattern[[i]]))
enumerate <- enumerate + 3
}
expect_equal(expect1, out1)
expect_equal(expect2, out2)
expect_equal(expect3, out3)
x.charclass <- c('stRRRingi','R STRINGI', '123')
pattern <- c('\\p{Ll}', '\\p{Lu}', '\\p{Zs}')
expect_equal(
stri_locate_ith(x.charclass, i = 1, charclass = pattern),
stringi::stri_locate_first_charclass(x.charclass, pattern)
)
expect_equal(
stri_locate_ith(x.charclass, i = 1, charclass = pattern, merge = FALSE),
stringi::stri_locate_first_charclass(x.charclass, pattern)
)
expect_equal(
stri_locate_ith(x.charclass, i = -1, charclass = pattern, merge = FALSE),
stringi::stri_locate_last_charclass(x.charclass, pattern)
)
expect_equal(
stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern), merge = FALSE,
rbind(
stringi::stri_locate_first_charclass(x.charclass, pattern),
stringi::stri_locate_last_charclass(x.charclass, pattern),
stringi::stri_locate_first_charclass(x.charclass, pattern)
)
)
expect_equal(
stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern, merge = FALSE),
rbind(
stringi::stri_locate_first_charclass(x.charclass, pattern),
stringi::stri_locate_last_charclass(x.charclass, pattern),
stringi::stri_locate_first_charclass(x.charclass, pattern)
)
)
stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern, merge = FALSE)
stringi::stri_locate_first_charclass(x.charclass, pattern)
stringi::stri_locate_last_charclass(x.charclass, pattern)
expect_equal(
stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern, merge = FALSE),
rbind(
stringi::stri_locate_first_charclass(x.charclass[1], pattern),
stringi::stri_locate_last_charclass(x.charclass[2], pattern),
stringi::stri_locate_first_charclass(x.charclass[3], pattern)
)
)
rbind(
stringi::stri_locate_first_charclass(x.charclass[1], pattern),
stringi::stri_locate_last_charclass(x.charclass[2], pattern),
stringi::stri_locate_first_charclass(x.charclass[3], pattern)
)
expect_equal(
stri_locate_ith(x.charclass, i = c(1, -1, 1), charclass = pattern, merge = FALSE),
rbind(
stringi::stri_locate_first_charclass(x.charclass[1], pattern[1]),
stringi::stri_locate_last_charclass(x.charclass[2], pattern[2]),
stringi::stri_locate_first_charclass(x.charclass[3], pattern[3])
)
)
library(tinycodet)
library(tinytest)
# set-up ====
errorfun <- function(tt) {
if(isTRUE(tt)) print(tt)
if(isFALSE(tt)) stop(print(tt))
}
tol <- sqrt(.Machine$double.eps)
eps <- tol * 2
enumerate <- 0
loops <- 0
# boundary tolerance checks ====
bnd <- cbind(0, eps)
x <- rnorm(10)
expect_silent(x %d{}% bnd)
x %d{}% bnd
# boundary tolerance checks ====
bnd <- cbind(eps, 0) # lower bound higher than upper bound, but within tolerance
x <- rnorm(10)
expect_silent(x %d{}% bnd)
# boundary tolerance checks ====
bnd <- cbind(eps/2, 0) # lower bound higher than upper bound, but within tolerance
x <- rnorm(10)
expect_silent(x %d{}% bnd)
expect_silent(x %d{}% c(eps/2, 0))
expect_silent(x %d{}% cbind(eps/2, 0))
expect_silent(x %d{}% cbind(eps * seq(0.1, 0.9), 0))
x <- x[1]
expect_silent(x %d{}% c(eps/2, 0))
expect_silent(x %d{}% cbind(eps/2, 0))
expect_silent(x %d{}% cbind(eps * seq(0.1, 0.9), 0))
tinycodet::safer_partialmatch
options()
?getOption("squarebrackets.protected")
opts <- options()
opts <- options()
expect_true(
!is.null(opts$warnPartialMatchArgs) &&
!is.null(opts$warnPartialMatchAttr) &&
!is.null(opts$warnPartialMatchDollar)
)
library(tinytest)
opts <- options()
# check if the options that are set by tinycodet, still exist in the current verion of R:
expect_true(
!is.null(opts$warnPartialMatchArgs) &&
!is.null(opts$warnPartialMatchAttr) &&
!is.null(opts$warnPartialMatchDollar)
)
