% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc.R
\name{misc}
\alias{misc}
\alias{stricter_TrueFalse}
\alias{\%<-c\%}
\title{Miscellaneous functions to help your coding etiquette}
\usage{
stricter_TrueFalse()

X \%<-c\% A
}
\arguments{
\item{X}{a syntactically valid unquoted name of the object to be created.}

\item{A}{any kind of object to be assigned to \code{X}.}
}
\value{
For \code{stricter_TrueFalse()}: \cr
Two objects, namely \code{T} and \code{F}, both set to \code{NULL}.
Removing the created \code{T} and \code{F} objects will restore their default behaviour. \cr
\cr
For \code{X \%<-c\% A}: \cr
The object \code{X} containing \code{A} is created in the current environment,
and this object cannot be changed. It can only be accessed or removed.
}
\description{
The \code{stricter_TrueFalse()} function re-assigns the \code{T} and \code{F} values to
\code{NULL}, and locks them, forcing the user to use \code{TRUE} and \code{FALSE}.
Removing the created \code{T} and \code{F} objects will restore their default behaviour. \cr
\cr
The \code{X \%<-c\% A} operator creates a \code{CONSTANT} \code{X}
and assigns \code{A} to it. \cr
Constants cannot be changed, only accessed or removed.
So if you have a piece of code that absolutely requires some \code{CONSTANT},
use this operator to create said \code{CONSTANT}. \cr
Removing object \code{X} also removes its binding lock.
Thus to change a \code{CONSTANT}, simply remove it and re-create it. \cr
}
\examples{

stricter_TrueFalse()
X \%<-c\% data.frame(x=3, y=2) # this data.frame cannot be changed. Only accessed or removed.
X[1, ,drop=FALSE]


}
