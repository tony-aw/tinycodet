% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_arithmetic.R
\name{str_arithmetic}
\alias{str_arithmetic}
\alias{\%s+\%}
\alias{\%s-\%}
\alias{\%s*\%}
\alias{\%s/\%}
\title{String arithmetic}
\usage{
x \%s+\% y

x \%s-\% p

x \%s*\% n

x \%s/\% p
}
\arguments{
\item{x}{a string or character vector.}

\item{y}{a string, or a character vector of the same length as \code{x}.}

\item{p}{either a list as returned by \link{s_pattern},
or else a character vector of the same length as \code{x} with regular expressions.}

\item{n}{a number, or a numeric vector of the same length as \code{x}.}
}
\value{
The \code{\%s+\%}, \code{\%s-\%}, and \code{\%s*\%} operators
return a character vector of the same length as \code{x}. \cr
The \code{\%s/\%} returns a integer vector of the same length as \code{x}.
}
\description{
String arithmetic operators. \cr
\cr
The \code{x \%s+\% y } operator is equivalent to \code{stringi::stri_c(x,y)}. \cr
\cr
The \code{x \%s-\% p } operator removes character/pattern defined in \code{p} from \code{x}. \cr
\cr
The \code{x \%s*\% n } operator repeats every element of \code{x} for \code{n} times,
and glues them together. \cr
\cr
The \code{x \%s/\% p } operator counts how often regular expression or character pattern \code{p}
occurs in each element of \code{x}. \cr
\cr
}
\details{
Be aware of the precedence here! \cr
These are not regular arithmetic; these are functions.
Functions come before all arithmetic in R. \cr
For example, the following code: \cr
\code{"a" \%s*\% 3^2} \cr
is interpreted as:
\code{("a" \%s*\% 3)^2} \cr
which of course gives an error, since you cannot square a character. \cr
Therefore, put brackets around the right hand side expression
when using chaining arithmetic, like so: \cr
\code{"a" \%s*\% (3^2)} \cr
\cr
}
\examples{
x <- c(paste0(letters[1:13], collapse=""), paste0(letters[14:26], collapse=""))
print(x)
y <- c("a", "b")
p <- rep("a|e|i|o|u", 2) # same as p <- s_pattern(regex=rep("a|e|i|o|u", 2))
n <- c(3, 2)

x \%s+\% y # =paste0(x,y)
x \%s-\% p # remove all vowels from x
x \%s*\% n
x \%s/\% p # count how often vowels appear in each string of vector x.


#############################################################################


x <- c(paste0(letters[1:13], collapse=""), paste0(letters[14:26], collapse=""))
print(x)
y <- "a"
# pattern that ignores case:
p <- s_pattern(regex=rep("A|E|I|O|U", 2), ignore.case=TRUE)
n <- c(2, 3)

x \%s+\% y # =paste0(x,y)
x \%s-\% p # remove all vowels from x
x \%s*\% n
x \%s/\% p # count how often vowels appears in each string of vector x.

}
\seealso{
\code{\link[=tinyoperations_stringi]{tinyoperations_stringi()}}
}
