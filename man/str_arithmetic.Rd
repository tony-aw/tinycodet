% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_arithmetic.R
\name{str_arithmetic}
\alias{str_arithmetic}
\alias{\%s-\%}
\alias{\%s/\%}
\alias{\%s//\%}
\title{String arithmetic}
\usage{
x \%s-\% p

x \%s/\% p

x \%s//\% brk
}
\arguments{
\item{x}{a string or character vector.}

\item{p}{either a list with \code{stringi} arguments (see \link{stri_rgx}),
or else a character vector of the same length as \code{x} with regular expressions. \cr
\ifelse{html}{\href{https://stringi.gagolewski.com/rapi/about_search_regex.html}{\figure{aboutsearch-regex-darkred.svg}{options: alt='[REGEX]'}}}{\href{https://stringi.gagolewski.com/rapi/about_search_regex.html}{about search: regex}} \cr
\ifelse{html}{\href{https://stringi.gagolewski.com/rapi/about_search_fixed.html}{\figure{aboutsearch-fixed-darkgreen.svg}{options: alt='[FIXED]'}}}{\href{https://stringi.gagolewski.com/rapi/about_search_fixed.html}{about search: fixed}} \cr
\ifelse{html}{\href{https://stringi.gagolewski.com/rapi/about_search_coll.html}{\figure{aboutsearch-coll-pink.svg}{options: alt='[COLL]'}}}{\href{https://stringi.gagolewski.com/rapi/about_search_coll.html}{about search: coll}} \cr
\ifelse{html}{\href{https://stringi.gagolewski.com/rapi/about_search_charclass.html}{\figure{aboutsearch-charclass-lightyellow.svg}{options: alt='[CHARCLASS]'}}}{\href{https://stringi.gagolewski.com/rapi/about_search_charclass.html}{about search: charclass}} \cr}

\item{brk}{a list with arguments to be send to \link[stringi]{stri_count_boundaries}. \cr
see also \link[stringi]{stri_opts_brkiter}. \cr
\ifelse{html}{\href{https://stringi.gagolewski.com/rapi/about_search_boundaries.html}{\figure{aboutsearch-boundaries-blue.svg}{options: alt='[BOUNDARIES]'}}}{\href{https://stringi.gagolewski.com/rapi/about_search_boundaries.html}{about search: boundaries}} \cr}
}
\value{
The \code{\%s+\%}, \code{\%s-\%}, and \code{\%s*\%} operators
return a character vector of the same length as \code{x}. \cr
The \code{\%s/\%} and \code{\%s//\%} both return an integer vector of the same length as \code{x}. \cr
The \code{\%s$\%} operator returns a character vector.
}
\description{
String arithmetic operators. \cr
\cr
The \code{x \%s+\% y } operator is exported from \code{stringi},
and concatenates character vectors \code{x} and \code{y}. \cr
\cr
The \code{ x \%s-\% p } operator removes character/pattern defined in \code{p} from \code{x}. \cr
\cr
The \code{ x \%s*\% n } operator is exported from \code{stringi},
and duplicates each string in \code{x} \code{n} times, and concatenates the results. \cr
\cr
The \code{ x \%s/\% p } operator counts how often regular expression or character pattern \code{p}
occurs in each element of \code{x}. \cr
\cr
The \code{ x \%s//\% brk } operator counts how often the text boundary specified in list \code{brk}
occurs in each element of \code{x}. \cr
\cr
The \code{e1 \%s$\% e2} operator is exported from \code{stringi},
and provides access to \link[stringi]{stri_sprintf} in the form of an infix operator. \cr
}
\examples{
x <- c(paste0(letters[1:13], collapse=""), paste0(letters[14:26], collapse=""))
print(x)
y <- c("a", "b")
p <- rep("a|e|i|o|u", 2) # same as p <- list(regex=rep("a|e|i|o|u", 2))
n <- c(3, 2)

x \%s+\% y # =paste0(x,y)
x \%s-\% p # remove all vowels from x
x \%s*\% n
x \%s/\% p # count how often vowels appear in each string of vector x.

test <- c(
paste0("The\u00a0above-mentioned    features are very useful. ",
"Spam, spam, eggs, bacon, and spam. 123 456 789"),
"good morning, good evening, and good night"
)
test \%s//\% list(type = "character")


#############################################################################


x <- c(paste0(letters[1:13], collapse=""), paste0(letters[14:26], collapse=""))
print(x)
y <- "a"
# pattern that ignores case:
p <- list(regex=rep("A|E|I|O|U", 2), case_insensitive = TRUE)
n <- c(2, 3)

x \%s+\% y # =paste0(x,y)
x \%s-\% p # remove all vowels from x
x \%s*\% n
x \%s/\% p # count how often vowels appears in each string of vector x.

}
\seealso{
\code{\link[=tinycodet_strings]{tinycodet_strings()}}
}
