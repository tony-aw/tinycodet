% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/force_libPaths.R
\name{force_libPaths}
\alias{force_libPaths}
\title{Simple Project isolation by forcing library Paths}
\usage{
force_libPaths(lib_vec)
}
\arguments{
\item{lib_vec}{a character vector giving the new library path(s). \cr
Just like in \code{.libPaths()}, the order matters: \cr
R will first look for packages in the first path in \code{.libPaths()}, \cr
and if it cannot find the package(s),
it will look for the packages in the second path in \code{.libPaths()},
etc.}
}
\value{
\code{force_libPaths()}: sdjusts the R library paths as defined in \code{.libPaths()} directly.
}
\description{
The \code{force_libPaths()} function allows the user to force R to specific libraries.
This was needed since base R's \code{.libPaths()} function
only allows adding new library paths, not overwrite existing ones.
The library paths are of course re-set again every time R restarts.
}
\examples{

\dontrun{
force_libPaths("/mylibrary")
}



}
\references{
McBain (2019, June 20). Before I Sleep: Hacking R's library paths. Retrieved from https://milesmcbain.com/posts/hacking-r-library-paths/
}
