% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pversion.R
\name{pversion}
\alias{pversion}
\alias{pversion_check4mismatch}
\alias{pversion_report}
\title{Check for Package Versions Mismatch}
\usage{
pversion_check4mismatch(pkgs = NULL, lib.loc = .libPaths())

pversion_report(pkgs = NULL, lib.loc = .libPaths())
}
\arguments{
\item{pkgs}{a character vector with the package name(s). \cr
Packages that are not actually loaded will be ignored. \cr
If \code{NULL}, ALL loaded packages (excluding core R) will be checked.}

\item{lib.loc}{character vector specifying library search path
(the location of R library trees to search through). \cr
The \code{lib.loc} argument would usually be \code{.libPaths()}. \cr
See also \link[base]{loadNamespace}.}
}
\value{
For  \code{pversion_check4mismatch()}: \cr
If no mismatch between loaded versions and those in \code{lib.loc} were found,
returns \code{NULL}. \cr
Otherwise it returns a \code{data.frame},
with the loaded version and library version of the specified packages. \cr
\cr
For \code{pversion_report()}: \cr
Returns a \code{data.frame},
with the loaded version and library version of the specified packages. \cr
\cr

In both functions, the data.frame consists of the following columns:
\itemize{
\item "package": specifying the packages.
\item "version_loaded": the version already loaded.
\item "version_lib.loc": the version of each package found in the library location. \cr \cr
}
}
\description{
The \link[base]{loadNamespace} function
has the unfortunate property that when dependencies of the specified package
cannot be found in the specified library,
it searches other known libraries to load the dependencies. \cr
\cr
The \code{pversion_check4mismatch()} function
checks if there is any mismatch between
the currently loaded packages and the packages in the specified library. \cr
So one could, for example,
load and import or attach all packages at the start of a script,
and check for version mismatches like so:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{lib.loc <- ...some library path...
import_as(~ dpr., "dplyr", lib.loc = lib.loc)
import_inops("magrittr", lib.loc = lib.loc)
import_data("dplyr", starwars", lib.loc = lib.loc)
library(ggplot2)
pkgs <- tools::package_dependencies(
   c("dplyr", "magrtittr", "ggplot2"), recursive = TRUE
)
pversion_check4mismatch(pkgs, lib.loc)

}\if{html}{\out{</div>}}

The \code{pversion_report()} function
gives a table of all specified packages,
with their loaded and installed versions,
regardless if there is a mismatch or not.
}
\examples{
\dontshow{if ("dplyr" \%installed in\%  .libPaths()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
"dplyr" \%installed in\%  .libPaths()

import_as(~dpr., "dplyr")
pversion_report(loadedNamespaces(), .libPaths())
pversion_check4mismatch(loadedNamespaces(), .libPaths())



\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[=tinycodet_import]{tinycodet_import()}}
}
