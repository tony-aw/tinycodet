% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s_pattern.R
\name{s_pattern}
\alias{s_pattern}
\title{Pattern specifications for string related infix operators.}
\usage{
s_pattern(...)
}
\arguments{
\item{...}{pass \code{stringi} arguments here.
I.e. \code{regex=p}, \code{coll=p}, \code{charclass=p}, \code{case_insensitive=FALSE}, etc.
See the documentation in the \code{stringi} R package.}
}
\value{
The \code{s_pattern(...)} call returns a list with arguments that will be
passed to the appropriate functions in \code{stringi}. \cr
}
\description{
The \code{\%s-\%} and \code{\%s/\%} operators, their in-place equivalents,
as well as the \code{\%sgrep\%} operator,
all perform pattern matching for some purpose.
By default the pattern matching is interpreted as case-sensitive
\code{regex} patterns from \code{stringi}.

The \code{s_pattern()} function allows the user to
specify exactly how the pattern should be interpreted.
To use more refined pattern definition,
simply replace the right-hand-side expression \code{p}
in the relevant operators with a call from
the \code{s_pattern()} function.

The \code{s_pattern()} function uses the exact same argument convention as \code{stringi}. For example:
\itemize{
\item \code{s_pattern(regex=p, case_insensitive=FALSE, ...)}
\item \code{s_pattern(fixed=p, ...)}
\item \code{s_pattern(coll=p, ...)}
\item \code{s_pattern(charclass=p, ...)}
}

All arguments in \code{s_pattern()} are simply passed to the
appropriate functions in \code{stringi}. \cr
For example: \cr
\code{x \%s/\% p } counts how often regular expression p occurs in x, \cr
whereas \code{x \%s/\% s_pattern(fixed=p, case_insensitive=TRUE) } will do the same,
except it uses fixed (i.e. literal) expression,
and it does not distinguish between upper case and lower case characters. \cr
\cr
To keep your code more compact when working with infix operators,
one can also fill in \code{ignore.case=TRUE} or \code{ignore_case=TRUE}
instead of \code{case_insensitive=TRUE},
and \code{s_pattern} will still understand that.
}
\details{
The \code{s_pattern()} function
only works in combination with the functions and operators in this package.
It does not affect functions from base R or functions from other packages.
}
\examples{
x <- c(paste0(letters[1:13], collapse=""), paste0(letters[14:26], collapse=""))
print(x)
p <- rep("a|e|i|o|u", 2) # same as p <- s_pattern(regex=rep("a|e|i|o|u", 2))
x \%s/\% p # count how often vowels appear in each string of vector x.

x <- c(paste0(letters[1:13], collapse=""), paste0(letters[14:26], collapse=""))
print(x)
p <- s_pattern(regex=rep("A|E|I|O|U", 2), case_insensitive=TRUE)
x \%s/\% p # count how often vowels appear in each string of vector x.

}
\seealso{
\code{\link[=tinyoperations_stringi]{tinyoperations_stringi()}}
}
