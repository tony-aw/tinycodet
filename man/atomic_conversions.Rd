% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/atomic_conversions.R
\name{atomic_conversions}
\alias{atomic_conversions}
\alias{as_bool}
\alias{as_int}
\alias{as_dbl}
\alias{as_chr}
\alias{is_wholenumber}
\title{Safer atomic type casting}
\usage{
as_bool(x, ...)

as_int(x, ...)

as_dbl(x, ...)

as_chr(x, ...)

is_wholenumber(x, tol = .Machine$double.eps^0.5)
}
\arguments{
\item{x}{vector, matrix, array
(or similar object where all elements share the same \code{atomic class}),
to be converted to some other \code{atomic class}.}

\item{...}{further arguments passed to or from other methods.}

\item{tol}{the tolerance.}
}
\value{
The converted object.
}
\description{
Atomic type casting in R is generally performed using the functions
\link[base]{as.logical}, \link[base]{as.integer}, \link[base]{as.double},
\link[base]{as.character}. \cr
There are a few annoying aspect of R with respect to atomic type casting in R
using these functions:
\itemize{
\item converting an object between atomic types strips the object of its attributes,
including attributes such as names and dimensions.
\item the conversions are somewhat inconsistent. For example,
to prevent stripping attributes, one can do something like this: \cr
\code{x[] <- as.numeric()} \cr
but this is not always the same as
first converting the object and then re-assigning the attributes.
}

The functions provided here by the \code{tinyoperations} package
do not strip strip away attributes. \cr
\cr
The functions are as follows: \cr
\itemize{
\item \code{as_bool()}: converts object to class \code{logical} (\code{TRUE, FALSE}).
\item \code{as_int()}: converts object to class \code{integer}.
\item \code{as_dbl()}: converts object to class \code{double} (AKA decimal numbers).
\item \code{as_chr()}: converts object to class \code{character}.
}

Moreover, the function \code{is_wholenumber()} is added, to safely test for whole numbers.
}
\examples{
x <- rnorm(10) |> matrix(ncol=2)
colnames(x) <- c("one", "two")
attr(x, "test") <- "test"

# notice that in all following, attributes are conserved:
as_bool(x)
as_int(x)
as_dbl(x)
as_chr(x)


}
\seealso{
\link{tinyoperations_dry}
}
