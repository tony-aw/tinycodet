% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_inops.R
\name{import_inops}
\alias{import_inops}
\title{Expose (or delete/detect) infix operators to (or from/in) the current environment}
\usage{
import_inops(pkgs, action = "expose", lib.loc = .libPaths(), ...)
}
\arguments{
\item{pkgs}{a character vector of package name(s),
specifying the packages from which to load infix operators,
and place them in the current environment. \cr
NOTE: When \code{action="expose"}, the order of the character vector matters!
If multiple packages share infix operators with the same name,
the conflicting operators of the package named last
will overwrite those of the earlier named packages.}

\item{action}{a string specifying the action to perform.}

\item{lib.loc}{character vector specifying library search path
(the location of R library trees to search through). \cr
This is usually \code{.libPaths()}. \cr
See also \link[base]{loadNamespace}.}

\item{...}{additional arguments, only relevant if \code{action = "expose"}. \cr
See \link{import_inops.control}.}
}
\value{
If \code{action = "expose"}: \cr
The infix operators from the specified packages will be placed
in the current environment
(like the Global environment, or the environment within a function). \cr
\cr
If \code{action = "remove"}: \cr
The infix operators from the packages specified in \code{pkgs},
exposed by \code{import_inops()}, will be deleted. \cr
If such infix operators could not be found, this function returns \code{NULL}. \cr
}
\description{
The \code{import_inops()} function can do one of three things,
depending on what the user specifies in argument \code{action}. \cr
\cr
With \code{action="expose"}: \cr
When using the \code{import_inops()} function
with \code{action="expose"},
it will place the infix operators of the specified packages in the current environment
(like the global environment, or the environment within a function). \cr
(If you wish to globally attach infix operators,
instead of just placing them in the current environment,
see \link{pkg_lsf}.) \cr
\cr
With \code{action="remove"}: \cr
When using the \code{import_inops()} function
with \code{action="remove"},
it will delete the infix operators
in the current environment, created by \code{import_inops()},
with namespaces
corresponding to the specified packages. \cr
User-defined infix operators are not touched
(attributes are used to check if an operator was created by \code{import_inops()} or not). \cr
\cr
}
\details{
Unlike the \link{import_as} function, the \code{import_inops()} function does
not require the packages to be necessarily related to each other. \cr
\cr
The \code{import_inops()} function does not support overloading base/core R operators,
so don't try. \cr
\cr
When using \code{import_inops()} to remove infix operators from the current environment,
it will use the attributes of those operators to determine if the infix operator came from
\code{import_inops()}, or if they were user-defined.
}
\examples{
\dontrun{
import_inops("data.table") # expose infix operators
import_inops("data.table", action = "remove") # remove the exposed infix operators.
}


}
\seealso{
\code{\link[=tinyoperations_import]{tinyoperations_import()}}
}
