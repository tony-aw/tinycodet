% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_inops.R
\name{import_inops}
\alias{import_inops}
\title{(un)expose infix operators in the current environment}
\usage{
import_inops(expose = NULL, unexpose = NULL, lib.loc = .libPaths(), ...)
}
\arguments{
\item{expose}{either one of the following:
\itemize{
\item a package alias as produced by the \link{import_as} function.
\item a character vector of package name(s),
specifying the packages from which to load infix operators,
and place them in the current environment. \cr
Note: The order of the character vector matters!
If multiple packages share infix operators with the same name,
the conflicting operators of the package named last
will overwrite those of the earlier named packages.
}}

\item{unexpose}{either one of the following:
\itemize{
\item a package alias as produced by the \link{import_as} function.
\item a character vector of package name(s).
}}

\item{lib.loc}{character vector specifying library search path
(the location of R library trees to search through). \cr
This is usually \code{.libPaths()}. \cr
See also \link[base]{loadNamespace}.}

\item{...}{additional arguments,
only relevant if the \code{expose} argument is used. \cr
See \link{import_inops.control}.}
}
\value{
If using argument \code{expose}: \cr
The infix operators specified in the given packages or package alias will be placed
in the current environment
(like the Global environment, or the environment within a function). \cr
\cr
If using argument \code{unexpose}: \cr
The infix operators specified in the given packages or package alias,
exposed by \code{import_inops()}, will be deleted. \cr
If such infix operators could not be found, this function returns \code{NULL}. \cr
}
\description{
\code{import_inops(expose=...)}
exposes infix operators specified in packages or a packages alias to the current environment
(like the global environment or the environment within a function). \cr
\cr
\code{import_inops(unexpose=...)}
unexposes (i.e. removes) the infix operators specified in packages or a package alias
from the current environment
(like the global environment or the environment within a function). \cr
Note that in this case only infix operators exposed by
\code{import_inops()}
will be removed from the current environment; \cr
"regular" infix operators (i.e. user-specified) will not be touched. \cr
\cr
}
\details{
Unlike the \link{import_as} function, the \code{import_inops()} function does
not require the packages to be necessarily related to each other. \cr
\cr
The \code{import_inops()} function does not support overloading base/core R operators,
so don't try. \cr
\cr
When using \code{import_inops()} to remove infix operators from the current environment,
it will use the attributes of those operators to determine if the infix operator came from
\code{import_inops()}, or if they were user-defined.
}
\examples{
\dontrun{
import_as(dt., "data.table")
import_inops(expose = dt.) # expose infix operators from alias
import_inops(unexpose = dt.) # unexposed infix operators from current environment
import_inops(expose = "data.table") # expose infix operators from package
import_inops(unexpose = "data.table") # remove the exposed infix operators from environment
}


}
\seealso{
\code{\link[=tinyoperations_import]{tinyoperations_import()}}, \code{\link[=import_inops.control]{import_inops.control()}}
}
