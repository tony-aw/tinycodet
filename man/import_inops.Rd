% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_inops.R
\name{import_inops}
\alias{import_inops}
\title{Expose infix operators to the current environment}
\usage{
import_inops(
  pkgs,
  lib.loc = .libPaths(),
  exclude,
  include.only,
  overwrite = TRUE,
  inherits = FALSE,
  delete
)
}
\arguments{
\item{pkgs}{a character vector of package name(s)
from which to load and expose infix operators. \cr
NOTE: The order of the character vector matters!
If multiple packages share infix operators with the same name,
the conflicting operators of the package named last
will overwrite those of the earlier named packages.}

\item{lib.loc}{character vector specifying library search path
(the location of R library trees to search through). \cr
This is usually \code{.libPaths()}. \cr
See also \link[base]{loadNamespace}.}

\item{exclude}{a character vector,
giving the infix operators NOT to expose to the current environment. \cr
This can be handy to prevent overwriting any (user defined)
infix operators already present in the current environment. \cr}

\item{include.only}{a character vector,
giving the infix operators to expose to the current environment,
and the rest of the operators will not be exposed. \cr
This can be handy to prevent overwriting any (user defined)
infix operators already present in the current environment. \cr}

\item{overwrite}{logical,
indicating if it is allowed to overwrite existing infix operators. \cr
\itemize{
\item If \code{TRUE} (default), a warning is given when operators existing in the current environment
are being overwritten,
but the function continuous nonetheless.
\item If \code{FALSE}, an error is produced
when the to be exposed operators already exist in the current environment,
and the function is halted.
}}

\item{inherits}{logical; when \code{overwrite=FALSE},
should enclosed environments,
especially package namespaces,
also be taken into account? \cr
Defaults to \code{FALSE}. \cr
See also \link[base]{exists}.}

\item{delete}{a character vector of package name(s)
from which to remove infix operators. \cr
Normally, the \code{import_inops()} function
exposes infix operators from packages \code{pkgs} to the current environment. \cr
But if the user specifies package names in the \code{delete} argument,
the \code{import_inops()} function will
ignore all other arguments, and simply delete all infix operators from the named packages
exposed by the \code{import_inops()} function. \cr
Infix operators manually defined by the user themselves will not be touched.}
}
\value{
If \code{pkgs} is specified: \cr
The infix operators from the specified packages will be placed
in the current environment
(like the Global environment, or the environment within a function). \cr
The infix operators will be LOCKED.
For information on the binding lock used, see \link{import_lock}. \cr
\cr
If \code{delete} is specified: \cr
The infix operators from the packages specified in \code{delete},
exposed by \code{import_inops()}, will be deleted. \cr
If such infix operators could not be found, this function returns \code{NULL}. \cr
}
\description{
The \code{import_inops()} function
exposes the infix operators of the specified packages to the current environment
(like the global environment, or the environment within a function). \cr
To ensure the user can still verify which operator function came from which package,
a "package" attribute is added to each exposed operator. \cr
If you wish to globally attach infix operators,
instead of just placing them in the current environment,
see \link{pkg_lsf}. \cr
}
\details{
\bold{On the \code{exclude} and \code{include.only} arguments}:\cr
You cannot specify both the \code{exclude} and \code{include.only} arguments.
Only one or the other, or neither. \cr
\cr
\bold{On the \code{pkgs} and \code{delete} arguments}: \cr
You cannot specify both the \code{pkgs} and \code{delete} arguments.
Only one or the other. \cr
Unlike the \link{import_as} function, the \code{import_inops()} function does
not require the packages to be necessarily related to each other. \cr
\cr
\bold{Other details}: \cr
The \code{import_inops()} function does not support overloading base/core R operators,
so don't try. \cr
\cr
}
\examples{
\dontrun{
import_inops("data.table") # expose infix operators
import_inops(delete="data.table") # remove the exposed infix operators.
}


}
\seealso{
\code{\link[=tinyoperations_import]{tinyoperations_import()}}
}
